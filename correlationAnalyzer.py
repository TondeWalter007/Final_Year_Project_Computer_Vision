# DONT USE

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn import linear_model
import statsmodels.api as sm

image_list = ['41A2.jpg', '41A3.jpg', '41A4.jpg', '41A5.jpg', '41B1.jpg', '41B2.jpg', '41B3.jpg', '41B4.jpg',
              '41B5.jpg', '42A1.jpg', '42A2.jpg', '42A3.jpg', '42A4.jpg', '42A5.jpg', '42B1.jpg', '42B2.jpg',
              '42B3.jpg', '42B4.jpg', '42B5.jpg', '43A1.jpg', '43A2.jpg', '43A3.jpg', '43A4.jpg', '43A5.jpg',
              '43B1.jpg', '43B3.jpg', '43B4.jpg', '43B5.jpg', '61A1.jpg', '61A2.jpg', '61A3.jpg', '61A4.jpg',
              '61A5.jpg', '61B1.jpg', '61B2.jpg', '61B3.jpg', '61B4.jpg', '61B5.jpg', '62A1.jpg', '62A2.jpg',
              '62A3.jpg', '62A4.jpg', '62A5.jpg', '62B1.jpg', '62B2.jpg', '62B3.jpg', '62B4.jpg', '62B5.jpg',
              '63A1.jpg', '63A3.jpg', '63A4.jpg', '63A5.jpg', '63B1.jpg', '63B2.jpg', '63B3.jpg', '63B4.jpg',
              '63B5.jpg', '81A1.jpg', '81A3.jpg', '81A4.jpg', '81A5.jpg', '81B1.jpg', '81B2.jpg',
              '81B3.jpg', '81B4.jpg', '81B5.jpg', '82A1.jpg', '82A2.jpg', '82A3.jpg', '82A4.jpg', '82A5.jpg',
              '82B1.jpg', '82B2.jpg', '82B3.jpg', '82B4.jpg', '83A1.jpg', '83A2.jpg', '83A3.jpg', '83A4.jpg',
              '83A5.jpg', '83B1.jpg', '83B2.jpg', '83B3.jpg', '83B4.jpg', '83B5.jpg']

l_analyzer = [34.55, 46.50, 56.96, 53.65, 50.79, 54.01, 52.48, 52.79, 51.83, 53.05, 46.78, 46.42, 49.99, 37.40, 46.42,
              50.10, 71.13, 51.43, 49.90, 51.66, 69.90, 50.78, 57.76, 49.20, 53.65, 53.89, 46.42, 53.89, 46.73, 52.23,
              49.07, 49.39, 58.23, 56.46, 57.71, 46.42, 53.07, 47.89, 55.57, 46.42, 53.64, 51.19, 46.42, 69.37, 52.88,
              52.23, 51.77, 46.42, 42.19, 37.85, 53.89, 52.23, 46.42, 40.60, 50.10, 46.42, 46.42, 54.94, 55.33, 52.88,
              46.42, 46.79, 56.48, 54.49, 34.36, 51.05, 53.14, 46.25, 49.13, 49.53, 34.43, 46.60, 51.84, 56.72, 46.42,
              48.05, 50.30, 35.61, 42.07, 54.72, 35.23, 52.23, 49.07, 42.88, 54.13]

a_analyzer = [15.87, 8.35, 24.62, 21.93, 7.88, 21.75, 27.06, 30.24, 33.16, 23.88, 39.00, 51.60, 31.59, 5.24, 51.60,
              34.03, 6.47, 32.11, 41.11, 27.06, 4.33, 33.64, 4.39, 3.34, 21.93, 25.20, 51.60, 25.20, 38.81, 2.46, 44.76,
              36.33, 15.59, 5.36, 13.75, 51.60, 34.28, 9.20, 18.91, 51.60, 23.17, 36.73, 51.60, 3.71, 32.70, 25.12,
              26.18, 51.60, -1.19, 3.51, 25.20, 25.12, 51.60, 1.05, 34.03, 51.60, 51.60, 22.13, 31.66, 32.70, 51.60,
              38.00, 21.85, 20.68, 19.42, 34.34, 33.41, 51.60, 43.19, 36.67, 26.07, 55.61, 29.92, 23.87, 51.60, 45.92,
              30.21, 23.21, 2.17, 26.43, 22.21, 25.12, 44.76, 14.08, 24.94]

b_analyzer = [23.69, 8.70, 40.53, 27.41, 7.80, 28.44, 28.34, 32.29, 31.75, 27.26, 17.45, 29.67, 24.01, 3.24, 29.67,
              26.03, 3.52, 29.46, 30.68, 25.50, 3.85, 28.67, 4.56, 0.61, 27.41, 30.70, 29.70, 30.70, 19.18, 3.89, 32.78,
              26.34, 36.41, 6.12, 32.97, 29.67, 36.75, 6.57, 30.95, 29.67, 28.58, 32.80, 29.67, 3.06, 34.76, 25.62,
              25.04, 29.67, 4.56, 4.48, 30.70, 25.62, 29.67, 2.89, 26.03, 29.67, 29.67, 31.93, 41.55, 34.76, 29.67,
              18.62, 36.62, 29.04, 23.63, 30.21, 36.25, 29.67, 31.61, 27.13, 34.43, 33.74, 28.19, 39.15, 29.67, 30.33,
              23.79, 23.08, 2.04, 35.16, 19.45, 25.62, 32.78, 25.19, 26.67]

gsi_ordered = [9.82, 7.49, 8.63, 10.57, 9.26, 6.29, 14.38, 9.13, 11.17, 13.32, 8.43, 6.44, 16.53, 9.48, 12.56, 7.29,
               12.92,
               13.02, 15.46, 12.25, 18.22, 18.96, 12.56, 12.14, 9.07, 11.13, 22.87, 9.04, 9.77, 20.30, 11.47, 10.41,
               7.43,
               12.27, 11.86, 13.46, 15.25, 12.23, 14.14, 9.35, 14.83, 8.41, 10.30, 9.23, 14.60, 15.31, 25.94, 12.28,
               10.94,
               13.34, 17.61, 16.03, 8.50, 4.83, 15.24, 9.80, 15.02, 15.80, 11.24, 12.85, 17.14, 11.024, 9.81, 14.62,
               16.09,
               15.75, 20.98, 6.08, 10.21, 12.96, 11.51, 12.80, 13.01, 11.99, 15.14, 11.86, 16.62, 4.57, 10.50, 16.38,
               6.48,
               12.65, 14.29, 10.15, 13.01]

color_corr = {
    'l': l_analyzer,
    'a': a_analyzer,
    'b': b_analyzer,
    'gsi': gsi_ordered
}

print('length of l array:', len(l_analyzer))
print('length of a array:', len(a_analyzer))
print('length of b array:', len(b_analyzer))
print('length of gsi array:', len(gsi_ordered))
print('')
print('average of l array:', np.average(l_analyzer))
print('average of a array:', np.average(a_analyzer))
print('average of b array:', np.average(b_analyzer))
print('average of gsi array:', np.average(gsi_ordered))

print("")

df = pd.DataFrame(color_corr, columns=['l', 'a', 'b', 'gsi'])
print(df)

X = df[['l', 'a', 'b']]
Y = df['gsi']

# linear regression model
regr = linear_model.LinearRegression()
regr.fit(X, Y)

print('Intercept: \n', regr.intercept_)
print('Coefficients: \n', regr.coef_)

# with statsmodels
X = sm.add_constant(X)  # adding a constant

model = sm.OLS(Y, X).fit()
predictions = model.predict(X)

print_model = model.summary()
print(print_model)
